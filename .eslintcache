[{"D:\\Projects\\webdev\\fake-shop\\src\\index.js":"1","D:\\Projects\\webdev\\fake-shop\\src\\reportWebVitals.js":"2","D:\\Projects\\webdev\\fake-shop\\src\\App.js":"3","D:\\Projects\\webdev\\fake-shop\\src\\components\\Header\\Header.js":"4","D:\\Projects\\webdev\\fake-shop\\src\\components\\Header\\Nav\\Nav.js":"5","D:\\Projects\\webdev\\fake-shop\\src\\components\\Footer\\Footer.js":"6","D:\\Projects\\webdev\\fake-shop\\src\\context.js":"7","D:\\Projects\\webdev\\fake-shop\\src\\components\\Home\\Home.js":"8","D:\\Projects\\webdev\\fake-shop\\src\\components\\Product\\Product.js":"9","D:\\Projects\\webdev\\fake-shop\\src\\api\\index.js":"10","D:\\Projects\\webdev\\fake-shop\\src\\components\\Loader.js":"11","D:\\Projects\\webdev\\fake-shop\\src\\components\\Alert\\Alert.js":"12","D:\\Projects\\webdev\\fake-shop\\src\\components\\Basket\\Basket.js":"13","D:\\Projects\\webdev\\fake-shop\\src\\components\\Basket\\BasketItems\\BasketItems.js":"14","D:\\Projects\\webdev\\fake-shop\\src\\components\\Basket\\BasketItem\\BasketItem.js":"15"},{"size":580,"mtime":1608399581309,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":1963,"mtime":1608400655473,"results":"19","hashOfConfig":"17"},{"size":303,"mtime":1607816700565,"results":"20","hashOfConfig":"17"},{"size":1971,"mtime":1608670609321,"results":"21","hashOfConfig":"17"},{"size":255,"mtime":1607820316684,"results":"22","hashOfConfig":"17"},{"size":1250,"mtime":1608670679782,"results":"23","hashOfConfig":"17"},{"size":691,"mtime":1607862738221,"results":"24","hashOfConfig":"17"},{"size":3487,"mtime":1608757906320,"results":"25","hashOfConfig":"17"},{"size":508,"mtime":1607860098123,"results":"26","hashOfConfig":"17"},{"size":131,"mtime":1607861851984,"results":"27","hashOfConfig":"17"},{"size":231,"mtime":1607901535810,"results":"28","hashOfConfig":"17"},{"size":1155,"mtime":1608757277432,"results":"29","hashOfConfig":"17"},{"size":377,"mtime":1608671637861,"results":"30","hashOfConfig":"17"},{"size":3230,"mtime":1608983684301,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1wqbevp",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\webdev\\fake-shop\\src\\index.js",[],["66","67"],"D:\\Projects\\webdev\\fake-shop\\src\\reportWebVitals.js",[],"D:\\Projects\\webdev\\fake-shop\\src\\App.js",["68","69","70"],"import React, { useEffect } from \"react\";\n\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport Home from './components/Home/Home';\nimport Alert from './components/Alert/Alert';\nimport Basket from './components/Basket/Basket';\n\nimport { useGlobalContext } from './context'\nimport { fetchProducts } from './api';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport './App.css';\n\nfunction App() {\n  const { products, setProducts, setCategories, isLoading, setIsLoading, showAlert, alertSettings } = useGlobalContext();\n\n  const extractCategories = (products) => {\n    const categories = products.map(product => {\n      return product.category;\n    });\n    console.log(categories);\n    const uniqueCategories = categories.filter((category, index, categoriesArr) => categoriesArr.indexOf(category) === index);\n    return uniqueCategories;\n  }\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setIsLoading(true);\n      setProducts(await fetchProducts());\n      setIsLoading(false);\n    }\n\n    fetchAPI();\n  }, []);\n\n  //there was a bug, I think caused by async/await, where products array wasn't available for \"extractCategories\" function. I couldn't add \"products\" as dependency to above useFetch as it was causing an infinite loop\n  // Therefore, I had to run a separate useEffect\n  useEffect(() => {\n    const uniqueCategories = extractCategories(products);\n    setCategories(uniqueCategories);\n  }, [products]);\n\n\n  console.log(products);\n  console.log({ isLoading });\n\n  return (\n    <Router>\n      <div className=\"site-wrapper\">\n        {showAlert ? <Alert {...alertSettings} /> : null}\n        <Header />\n        <main>\n          <Route exact path='/'>\n            <Home />\n          </Route>\n          <Route exact path='/basket'>\n            <Basket />\n          </Route>\n        </main>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","D:\\Projects\\webdev\\fake-shop\\src\\components\\Header\\Header.js",[],"D:\\Projects\\webdev\\fake-shop\\src\\components\\Header\\Nav\\Nav.js",["71","72"],"import React from \"react\";\r\nimport { useGlobalContext } from '../../../context';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Nav.css';\r\n\r\nconst Nav = () => {\r\n    const { isNavOpen, toggleNav, categories, basket, products, setProducts } = useGlobalContext();\r\n    console.log(categories);\r\n\r\n    const handleFilterByCategory = (category) => {\r\n        // need to do it some other way, as when I filter products, state changes and \"extractCategories()\" in App.js that generates categories generates only one category, because all products in current state come from one category\r\n        //setProducts(products.filter(product => product.category === category));\r\n        console.log(category);\r\n    }\r\n\r\n    return (\r\n        <nav className=\"header__nav nav\">\r\n            <Link to=\"/basket\" className=\"nav__basket-mobile\">\r\n                Basket Icon\r\n                <span className=\"nav__basket-count\">{basket.count}</span>\r\n            </Link>\r\n            <ul className={`nav__list ${isNavOpen ? 'nav__list--open' : ''}`}>\r\n                <li className=\"nav__item\">\r\n                    <Link to=\"/\" className=\"nav__link\">\r\n                        Home\r\n                    </Link>\r\n                </li>\r\n\r\n                {categories.length && categories.map((category, index) => {\r\n                    return <li className=\"nav__item\" key={index}>\r\n                        <button className=\"nav__link\" onClick={() => handleFilterByCategory(category)}>\r\n                            {category}\r\n                        </button>\r\n                    </li>\r\n                })}\r\n\r\n                <li className=\"nav__basket-desktop\">\r\n                    <Link to=\"/basket\" className=\"nav__link\">\r\n                        Basket ({basket.count})\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n            <button className=\"nav__menu-toggler\" onClick={toggleNav}>Toggler</button>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","D:\\Projects\\webdev\\fake-shop\\src\\components\\Footer\\Footer.js",[],"D:\\Projects\\webdev\\fake-shop\\src\\context.js",[],"D:\\Projects\\webdev\\fake-shop\\src\\components\\Home\\Home.js",[],"D:\\Projects\\webdev\\fake-shop\\src\\components\\Product\\Product.js",["73"],"import React, { useEffect, useState } from \"react\";\r\nimport { useGlobalContext } from '../../context';\r\n\r\nimport './Product.css';\r\n\r\nconst Product = ({ category, description, id, image, price, title }) => {\r\n    const { basket, setBasket, showAlert, setShowAlert, setAlertSettings } = useGlobalContext();\r\n    const [quantity, setQuantity] = useState(1);\r\n\r\n    const displayAlert = (show = false, type = '', message = '') => {\r\n        setShowAlert(show);\r\n        setAlertSettings({ type, message });\r\n    }\r\n\r\n    const handleAddToBasket = (e) => {\r\n        e.preventDefault();\r\n\r\n        //1. when same product is added to the basket, merge quantity instead of adding another item - DONE\r\n        const currentBasketItemKey = basket.products.findIndex(item => item.id === id);\r\n        console.log({ currentBasketItemKey });\r\n        if (currentBasketItemKey !== -1) {\r\n            const currentQuantity = basket.products[currentBasketItemKey].quantity;\r\n            const newQuantity = currentQuantity + quantity;\r\n            console.log({ newQuantity });\r\n            const newBasket = { ...basket };\r\n            newBasket.products[currentBasketItemKey].quantity = newQuantity;\r\n            newBasket.count += quantity;\r\n            newBasket.total += parseFloat(price * quantity);\r\n            setBasket(newBasket);\r\n        } else {\r\n            const newItem = {\r\n                category, description, id, image, price, title, quantity\r\n            }\r\n            const newBasket = {\r\n                ...basket,\r\n                products: [...basket.products, newItem],\r\n                count: basket.count += quantity,\r\n                total: basket.total += parseFloat(price * quantity)\r\n            };\r\n            console.log(newBasket);\r\n            setBasket(newBasket);\r\n        }\r\n\r\n        setQuantity(1);\r\n        displayAlert(true, 'success', 'Product added to the basket!');\r\n    }\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setShowAlert(false);\r\n        }, 3000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [showAlert])\r\n\r\n    return (\r\n        <article className=\"home__product product\">\r\n            <figure className=\"product__image-wrapper\">\r\n                <img src={image} alt={title} className=\"product__image\" />\r\n            </figure>\r\n            <div className=\"product__info\">\r\n                <p className=\"product__category\">{category}</p>\r\n                <h2 className=\"product__name\">{title}</h2>\r\n                <div className=\"product__description\">\r\n                    {description}\r\n                </div>\r\n                <footer className=\"product__footer\">\r\n                    <div className=\"product__price\">£{price.toFixed(2)}</div>\r\n                    <form className=\"product__form\" onSubmit={(e) => handleAddToBasket(e)}>\r\n                        <select id=\"\" value={quantity} onChange={(e) => setQuantity(parseInt(e.target.value))}>\r\n                            <option value=\"1\">1</option>\r\n                            <option value=\"2\">2</option>\r\n                            <option value=\"3\">3</option>\r\n                            <option value=\"4\">4</option>\r\n                            <option value=\"5\">5</option>\r\n                        </select>\r\n                        <button className=\"btn btn-primary\">Add to Basket</button>\r\n                    </form>\r\n                </footer>\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Product;","D:\\Projects\\webdev\\fake-shop\\src\\api\\index.js",[],"D:\\Projects\\webdev\\fake-shop\\src\\components\\Loader.js",[],"D:\\Projects\\webdev\\fake-shop\\src\\components\\Alert\\Alert.js",[],"D:\\Projects\\webdev\\fake-shop\\src\\components\\Basket\\Basket.js",[],"D:\\Projects\\webdev\\fake-shop\\src\\components\\Basket\\BasketItems\\BasketItems.js",[],"D:\\Projects\\webdev\\fake-shop\\src\\components\\Basket\\BasketItem\\BasketItem.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":12,"column":42,"nodeType":"80","messageId":"81","endLine":12,"endColumn":48},{"ruleId":"82","severity":1,"message":"83","line":36,"column":6,"nodeType":"84","endLine":36,"endColumn":8,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"86","line":43,"column":6,"nodeType":"84","endLine":43,"endColumn":16,"suggestions":"87"},{"ruleId":"78","severity":1,"message":"88","line":8,"column":55,"nodeType":"80","messageId":"81","endLine":8,"endColumn":63},{"ruleId":"78","severity":1,"message":"89","line":8,"column":65,"nodeType":"80","messageId":"81","endLine":8,"endColumn":76},{"ruleId":"82","severity":1,"message":"90","line":54,"column":8,"nodeType":"84","endLine":54,"endColumn":19,"suggestions":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setIsLoading' and 'setProducts'. Either include them or remove the dependency array.","ArrayExpression",["94"],"React Hook useEffect has a missing dependency: 'setCategories'. Either include it or remove the dependency array.",["95"],"'products' is assigned a value but never used.","'setProducts' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setShowAlert'. Either include it or remove the dependency array.",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [setIsLoading, setProducts]",{"range":"103","text":"104"},"Update the dependencies array to be: [products, setCategories]",{"range":"105","text":"106"},"Update the dependencies array to be: [setShowAlert, showAlert]",{"range":"107","text":"108"},[1102,1104],"[setIsLoading, setProducts]",[1495,1505],"[products, setCategories]",[2083,2094],"[setShowAlert, showAlert]"]